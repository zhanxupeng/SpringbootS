<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mybatis.test.repo.DictionaryMapper">
    <resultMap id="BaseResultMap" type="com.mybatis.test.model.Dictionary">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="key" property="key" jdbcType="VARCHAR"/>
        <result column="label" property="label" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="del_flag" property="delFlag" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        `type`,
        `key`,
        label,
        remarks,
        create_by,
        create_date,
        update_by,
        update_date,
        del_flag
    </sql>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from dictionary
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="com.mybatis.test.model.Dictionary">
        insert into dictionary (
        id,
        `type`,
        `key`,
        label,
        remarks,
        create_by,
        create_date,
        update_by,
        update_date,
        del_flag
        )values (
        #{id,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR},
        #{key,jdbcType=VARCHAR},
        #{label,jdbcType=VARCHAR},
        #{remarks,jdbcType=VARCHAR},
        #{createBy,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR},
        #{updateDate,jdbcType=TIMESTAMP},
        #{delFlag,jdbcType=VARCHAR})
  </insert>

    <update id="update" parameterType="com.mybatis.test.model.Dictionary">
        update dictionary
        <set>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="key != null">
                `key` = #{key,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="java.lang.String">
        delete from dictionary
        where id IN
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByLogic" parameterType="java.lang.String">
        UPDATE dictionary SET
        del_flag =${@com.mybatis.test.common.enumeration.DelFlagEnum@YES.getValue()},
        update_date = current_timestamp()
        WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>
    
    <select id="getByType" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM dictionary
        where `type` = #{type}
    </select>


</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mybatis.test.repo.CommentsMapper">
    <resultMap id="BaseResultMap" type="com.mybatis.test.model.Comments">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
        <result column="dynamic_id" property="dynamicId" jdbcType="VARCHAR"/>
        <result column="to_customer_id" property="toCustomerId" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="praise" property="praise" jdbcType="INTEGER"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="del_flag" property="delFlag" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        customer_id,
        dynamic_id,
        to_customer_id,
        content,
        praise,
        remarks,
        create_by,
        create_date,
        update_by,
        update_date,
        del_flag
    </sql>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from comments
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="com.mybatis.test.model.Comments">
    insert into comments (
        id,
        customer_id,
        dynamic_id,
        to_customer_id,
        content,
        praise,
        remarks,
        create_by,
        create_date,
        update_by,
        update_date,
        del_flag
        )values (
        #{id,jdbcType=VARCHAR},
        #{customerId,jdbcType=VARCHAR},
        #{dynamicId,jdbcType=VARCHAR},
        #{toCustomerId,jdbcType=VARCHAR},
        #{content,jdbcType=VARCHAR},
        #{praise,jdbcType=INTEGER},
        #{remarks,jdbcType=VARCHAR},
        #{createBy,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR},
        #{updateDate,jdbcType=TIMESTAMP},
        #{delFlag,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.mybatis.test.model.Comments">
        update comments
        <set>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=VARCHAR},
            </if>
            <if test="dynamicId != null">
                dynamic_id = #{dynamicId,jdbcType=VARCHAR},
            </if>
            <if test="toCustomerId != null">
                to_customer_id = #{toCustomerId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="praise != null">
                praise = #{praise,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="java.lang.String">
        delete from comments
        where id IN
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByLogic" parameterType="java.lang.String">
        UPDATE comments SET
        del_flag = ${@com.mybatis.test.common.enumeration.DelFlagEnum@YES.getValue()},
        update_date = current_timestamp()
        WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <select id="getByDynamic" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM comments
        where dynamic_id=#{dynamicId}
        and del_flag = ${@com.mybatis.test.common.enumeration.DelFlagEnum@NO.getValue()}
        order by create_date desc
    </select>

    <select id="getHomeCommentsByCount" resultType="com.mybatis.test.domain.HomeComments">
        SELECT
        b.id AS dynamicId,
        b.title AS title,
        a.create_date AS createDate,
        a.content AS content
        FROM comments a
        INNER JOIN dynamic b ON a.dynamic_id = b.id
        WHERE a.customer_id = #{customerId}
        AND a.del_flag = ${@com.mybatis.test.common.enumeration.DelFlagEnum@NO.getValue()}
        ORDER BY a.create_date desc
        limit #{count}
    </select>

    <select id="getCustomerComments" resultType="com.mybatis.test.domain.DynamicComments">
        SELECT
        b.id AS dynamicId,
        b.title AS dynamicName,
        b.customer_id AS dynamicCustomerId,
        c.id AS commentsCustomerId,
        c.nick_name AS commentsCustomerName,
        a.create_date AS commentsDate
        FROM comments a
        INNER JOIN dynamic b ON a.dynamic_id = b.id
        INNER JOIN customer c ON a.customer_id = c.id
        WHERE a.to_customer_id = #{toCustomerId}
        AND a.del_flag = ${@com.mybatis.test.common.enumeration.DelFlagEnum@NO.getValue()}
        AND c.id != #{toCustomerId}
        ORDER BY a.create_date desc
    </select>
</mapper>